/**
 * created 2020-11-22
 *
 * @by fan ou(1329650004@qq.com)
 *
 * Copy right 2020 fan ou
 *
 * File contains all features of apk
 *
 */
package cn;

import java.util.*;

import java.util.logging.Logger;
import Logger.LogFatory;


public class Features {

	/* feature of user action in article Analysis of Code Heterogeneity for High-Precision Classification of Repackaged Malware*/
    // private int userActionNum;
    private int userActionType;
    private static String[] userActionArray;
    private boolean[] userActionFeatureArray;

    /* feature of sensitive Api from pscout */
    // private int senApiNum;
    private int senApiOfPscoutType;
    private static String[] senApiOfPscoutArray;
    private static String[] senApiOfPscoutClassArray;
	private boolean[] senApiOfPscoutFeatureArray;

    /* feature of sensitive Api from dapasa */
    // private int senApiNum;
    private int senApiOfDapasaType;
    private static String[] senApiOfDapasaArray;
    private boolean[] senApiOfDapasaFeatureArray;

    /* feature of dangerous permissions in many articles */
	// private int permissionNum;
	private int permissionType;
	private static String[] permissionArray;
	private boolean[] permissionFeatureArray;

	/* generate all features to a line*/
    private String featureLine;

    public String getFeatureLine() {
        return featureLine;
    }

    public void setFeatureLine(String featureLine) {
        this.featureLine = featureLine;
    }

    public int getUserActionType() {
		return userActionType;
	}

	public void setUserActionType(int userActionType) {
		this.userActionType = userActionType;
	}

	public static String[] getUserActionArray() {
		return userActionArray;
	}

	public boolean[] getUserActionFeatureArray() {
		return userActionFeatureArray;
	}

	public void setUserActionFeatureArray(boolean[] userActionFeatureArray) {
		this.userActionFeatureArray = userActionFeatureArray;
	}

    public int getSenApiOfPscoutType() {
        return senApiOfPscoutType;
    }

    public void setSenApiOfPscoutType(int senApiOfPscoutType) {
        this.senApiOfPscoutType = senApiOfPscoutType;
    }

    public static String[] getSenApiOfPscoutArray() {
        return senApiOfPscoutArray;
    }

    public static void setSenApiOfPscoutArray(String[] senApiOfPscoutArray) {
        Features.senApiOfPscoutArray = senApiOfPscoutArray;
    }

    public static String[] getSenApiOfPscoutClassArray() {
        return senApiOfPscoutClassArray;
    }

    public static void setSenApiOfPscoutClassArray(String[] senApiOfPscoutClassArray) {
        Features.senApiOfPscoutClassArray = senApiOfPscoutClassArray;
    }

    public boolean[] getSenApiOfPscoutFeatureArray() {
        return senApiOfPscoutFeatureArray;
    }

    public void setSenApiOfPscoutFeatureArray(boolean[] senApiOfPscoutFeatureArray) {
        this.senApiOfPscoutFeatureArray = senApiOfPscoutFeatureArray;
    }

    public int getSenApiOfDapasaType() {
        return senApiOfDapasaType;
    }

    public void setSenApiOfDapasaType(int senApiOfDapasaType) {
        this.senApiOfDapasaType = senApiOfDapasaType;
    }

    public static String[] getSenApiOfDapasaArray() {
        return senApiOfDapasaArray;
    }

    public static void setSenApiOfDapasaArray(String[] senApiOfDapasaArray) {
        Features.senApiOfDapasaArray = senApiOfDapasaArray;
    }

    public boolean[] getSenApiOfDapasaFeatureArray() {
        return senApiOfDapasaFeatureArray;
    }

    public void setSenApiOfDapasaFeatureArray(boolean[] senApiOfDapasaFeatureArray) {
        this.senApiOfDapasaFeatureArray = senApiOfDapasaFeatureArray;
    }

    public int getPermissionType() {
		return permissionType;
	}

	public void setPermissionType(int permissionType) {
		this.permissionType = permissionType;
	}

	public static String[] getPermissionArray() {
		return permissionArray;
	}

	public boolean[] getPermissionFeatureArray() {
		return permissionFeatureArray;
	}

	public void setPermissionFeatureArray(boolean[] permissionFeatureArray) {
		this.permissionFeatureArray = permissionFeatureArray;
	}

	private static Logger log = LogFatory.getGlobalLogger();

	/**
	 * load userActionArray and senstiveApiArray and permissionArray
	 *
	 */
	static {
		loadUserActionArray();
		loadSenApiArray();
		loadPermissionArray();
	}

	/**
	 * load  UserActinArray
	 *
	 */
	public static void loadUserActionArray() {
		List<String> userActionList = Utils.fileRead(".\\.\\data\\userAction.txt");
		userActionArray = new String[12];
		if (userActionList == null || userActionList.size() != 12) {
			log.severe("load userActionArray failed");
			return;
		}
		for (int i=0;i<userActionList.size();i++) {
			String userAction = userActionList.get(i).trim();
			userActionArray[i] = userAction;
		}
	}

	/**
	 * load  permissionArray
	 *
	 */
	public static void loadPermissionArray() {
		List<String> permissionList = Utils.fileRead(".\\.\\data\\permissionsWithoutNormal.txt");
		permissionArray = new String[121];

		if (permissionList == null || permissionList.size() != 121) {
			log.severe("load permissionList failed");
			return;
		}
		for (int i=0;i<permissionList.size();i++) {
			String permission = permissionList.get(i).trim();
			permissionArray[i] = permission;
		}
	}

	/**
	 * load  sen api and class from pscout
	 *
	 */
	public static void loadSenApiArray() {
		List<String> senApiFromDAPASA = Utils.fileRead(".\\.\\data\\sensitiveApiFromDAPASA.txt");
		List<String> senApiFromPscout = Utils.fileRead(".\\.\\data\\sensitiveApiFromPscout.txt");
		int lengthDAPASA = senApiFromDAPASA.size();
		int lengthPscout = senApiFromPscout.size();
		if (senApiFromDAPASA == null || senApiFromPscout== null || lengthDAPASA == 0 || lengthPscout == 0) {
			log.severe("load sensitive Api failed");
			return;
		}
		senApiOfDapasaArray = new String[lengthDAPASA];
		senApiOfPscoutArray = new String[lengthPscout];
		senApiOfPscoutClassArray = new String[868];
		List<String> saveClassList = new ArrayList<>();
		int arrayIndex = 0;
		for (int i=0;i<senApiFromDAPASA.size();i++) {
			String senApi = senApiFromDAPASA.get(i).trim();
            senApiOfDapasaArray[i] = senApi;
		}

		for (int i=0;i<senApiFromPscout.size();i++) {
			String senApi = senApiFromPscout.get(i).trim();
			int index = senApi.indexOf("->");
			String senApiClass = senApi.substring(0, index - 1);

			if (!saveClassList.contains(senApiClass)) {
                senApiOfPscoutClassArray[arrayIndex++] = senApiClass;
                saveClassList.add(senApiClass);
            }
            senApiOfPscoutArray[i] = senApi;
		}
	}

    /**
     * set dangerous permissions feature
     *
     * @param apkClass
     */
	public void setPermissionFeature(ApkClass apkClass) {
	    List<String> permissionList = apkClass.getPermissionList();
	    if (permissionList == null || permissionList.size() == 0) {
	        log.info("apk:"+apkClass.getApkkName()+" does not have dangerous permissions");
	        return;
        }
	    if (permissionList.contains("READ_PHONE_STATE")) {
	        System.out.println(1);
        }
        System.out.println(permissionArray.length);
	    for (int i=0;i<permissionFeatureArray.length;i++) {
	        if (permissionList.contains(permissionArray[i])) {
	            log.info("apk:" + apkClass.getApkkName() + " permission:"+permissionArray[i]+" set");
	            permissionFeatureArray[i] = true;
            }
        }

    }

    /**
     * set sensitive api from dapasa and pscout
     *
     * @param apkClass
     */
    public void setSensitiveApi(ApkClass apkClass) {
	    Set<String> calleeApiList = apkClass.getCalleeApiList();
	    Set<String> calledApiList = apkClass.getCalledApiList();

	    if (calleeApiList == null || calleeApiList.size() == 0) {
            log.info("apk:"+apkClass.getApkkName()+" does not have callee api list");
        }

        if (calleeApiList == null || calleeApiList.size() == 0) {
            log.info("apk:"+apkClass.getApkkName()+" does not have called api list");
        }

        Iterator<String> calleeIterator=calleeApiList.iterator();
        Iterator<String> calledIterator=calledApiList.iterator();
	    // filter callee api list first
        while (calleeIterator.hasNext()) {
            String method = calleeIterator.next();
            if (filterMethodOfClass(method)) {
                setSenApiToFeature(method, 0);
            }
        }

        // filter called api list first
        while (calledIterator.hasNext()){
            String method = calledIterator.next();
            setSenApiToFeature(method, 1);
        }
    }

    /**
     * filter callee method of thier class
     *
     * @param method smalimethod
     */
    public boolean filterMethodOfClass(String method) {
        return true;
    }

    /**
     * set callee(0) or called(1) method to feature
     *
     * @param method
     * @param type
     * @return
     */
    public boolean setSenApiToFeature(String method, int type) {
        if (type == 1) {
            for (int i=0;i<senApiOfDapasaArray.length;i++) {
                if (method.equals(senApiOfDapasaArray[i])) {
                    log.info("senApiDapasa:" + senApiOfDapasaArray[i] + " set");
                    senApiOfDapasaFeatureArray[i] = true;
                }
            }
            return false;
        } else {
            for (int i=0;i<senApiOfPscoutArray.length;i++) {
                if (method.equals(senApiOfPscoutArray[i])) {
                    log.info("senApiPscout:" + senApiOfPscoutArray[i] + " set");
                    senApiOfPscoutFeatureArray[i] = true;
                }
            }
            return false;
        }
    }

    /**
     * set number of features
     *
     */
    public void setNumberFeature() {
        // user action number
        for (int i=0;i<userActionFeatureArray.length;i++) {
            if (userActionFeatureArray[i]) {
                this.userActionType++;
            }
        }

        // permission number
        for(int i=0;i<permissionFeatureArray.length;i++) {
            if (permissionFeatureArray[i]) {
                this.permissionType++;
            }
        }

        // dapasa sen api number
        for (int i=0;i<senApiOfDapasaFeatureArray.length;i++) {
            if (senApiOfDapasaFeatureArray[i]) {
                this.senApiOfDapasaType++;
            }
        }

        // pscout sen api number
        for (int i=0;i<senApiOfPscoutFeatureArray.length;i++) {
            if (senApiOfPscoutFeatureArray[i]) {
                this.senApiOfPscoutType++;
            }
        }
    }

    /**
     * set all features to a line
     *
     */
    public void setFeaturesToLine(ApkClass apkClass) {
        StringBuilder sb = new StringBuilder();
        sb.append(apkClass.getApkkName());
        sb.append(",");
        sb.append(userActionType);
        sb.append(",");
        sb.append(senApiOfDapasaType);
        sb.append(",");
        sb.append(senApiOfPscoutType);
        sb.append(",");
        sb.append(permissionType);
        sb.append(",");
        for (int i=0;i<userActionFeatureArray.length;i++) {
            if (userActionFeatureArray[i]) {
                sb.append("1,");
            } else {
                sb.append("0,");
            }
        }
        for (int i=0;i<senApiOfDapasaFeatureArray.length;i++) {
            if (senApiOfDapasaFeatureArray[i]) {
                sb.append("1,");
            } else {
                sb.append("0,");
            }
        }
        for (int i=0;i<senApiOfPscoutFeatureArray.length;i++) {
            if (senApiOfPscoutFeatureArray[i]) {
                sb.append("1,");
            } else {
                sb.append("0,");
            }
        }
        for (int i=0;i<permissionFeatureArray.length;i++) {
            if (permissionFeatureArray[i]) {
                sb.append("1,");
            } else {
                sb.append("0,");
            }
        }
        if (apkClass.isMalware() == 0) {
            sb.append("no");
        } else if (apkClass.isMalware() == 1) {
            sb.append("yes");
        }
        this.featureLine = sb.toString();
    }

    /**
     * set apk feature
     *
     */
	public Features(ApkClass apkClass) {
	    // init array
        this.permissionFeatureArray = new boolean[121];
	    this.senApiOfDapasaFeatureArray = new boolean[414];
	    this.senApiOfPscoutFeatureArray = new boolean[2912];

	    // first step set userAction
        this.userActionFeatureArray = apkClass.getUserActionFeatureArray();
        // second step generate dangerous permissions
        setPermissionFeature(apkClass);
        // third step generate sensitive api
        setSensitiveApi(apkClass);
        // fourth step generate number of features
        setNumberFeature();
        // set all feature to a line
        setFeaturesToLine(apkClass);
	}

}
