package cn;

import weka.core.Instances;

import java.util.*;
import java.io.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;

public class Main {

    public static void main(String[] args) {

        //startApkAnalyse();

        setInstancesFromFile();

        //RandomTrees.gen_Arff(instances, saveArffPath);

    }




    /**
     * get All apks
     *
     */
    public static void startApkAnalyse(){
        try {
            String badApkDirPath = "F:\\apkSample\\badApk\\Adware\\Airpush\\variety1";
            String goodApkDirPath = "E:\\benign_apk";
            String saveGoodApkDirPath = "F:\\apkSampleMin\\decodeGoodApk";
            String saveBadApkDirPath = "F:\\apkSampleMin\\decodeBadApk";

            String saveGoodFeatureFilePath = ".\\.\\feature\\saveGoodFeature.txt";
            String saveBadFeatureFilePath = ".\\.\\feature\\saveBadFeature.txt";

            long startTime = System.currentTimeMillis();
           // ExecutorService fixedThreadPool = Executors.newFixedThreadPool(4);
            File []badApks = new File(badApkDirPath).listFiles();
            File []goodApks = new File(goodApkDirPath).listFiles();

            for (File apk:goodApks) {
                if (apk.getName().endsWith(".apk")) {
                    /*
                    fixedThreadPool.submit(new Runnable() {
                        @Override
                        public void run() {
                            ApkClass apkClass = new ApkClass(goodApkDirPath, apk.getName(), saveGoodApkDirPath, false, saveGoodFeatureFilePath, 0, true);
                        }
                    });
                    */
                    ApkClass apkClass = new ApkClass(goodApkDirPath, apk.getName(), saveGoodApkDirPath, false, saveGoodFeatureFilePath, 0, true);
                }
            }

            //fixedThreadPool.shutdown();
            //fixedThreadPool.awaitTermination(6, TimeUnit.HOURS);
            long endTime = System.currentTimeMillis();
            System.out.println("程序运行时间：" + (endTime - startTime) + "ms");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    public static void setInstancesFromFile() {
        String goodFeatureFile = "D:\\基于语义分析的安卓恶意检测\\ouDroid\\feature\\saveGoodFeature.txt";
        String badFeatureFile = "D:\\基于语义分析的安卓恶意检测\\ouDroid\\feature\\saveBadFeature.txt";

        Instances instances = RandomTrees.gen_Instances();
        instances = RandomTrees.set_Instances(instances, goodFeatureFile, false);
        instances = RandomTrees.set_Instances(instances, badFeatureFile, true);
        System.out.println(RandomTrees.RandomTreeUse(instances));
    }
}
